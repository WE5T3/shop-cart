{"version":3,"sources":["main.js"],"names":["ShopCart","prefix","defCart","prototype","cart","Cart","document","getElementsByClassName","i","add","updateTotal","Item","tmp","data","find","Find","check","className","name","price","num","reduce","subtotal","inventory","del","textContent","toFixed","obj","items","all","bottom","parentNode","removeChild","onclick","checkAll","cloneNode","item","alert","updateSubtotal","confirm","push","before","checked"],"mappings":"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","file":"main.0f43e466.map","sourceRoot":"..\\src","sourcesContent":["//创建ShopCart构造函数\r\nvar ShopCart = function (prefix, defCart) {\r\n    Find.prototype.prefix = prefix\r\n    //完成购物车中商品的添加\r\n    //通过Cart对象查找class为cart-item的<tr>模板，然后创建了cart对象\r\n    var cart = new Cart(document.getElementsByClassName(prefix)[0])\r\n    for (var i in defCart) {\r\n        cart.add(defCart[i]) //\t添加商品\r\n    }\r\n    cart.updateTotal() //更新购物车统计（购买的总数量和总价格）\r\n}\r\n\r\n//\r\nCart.prototype = {\r\n    /**\r\n     * 向购物车中添加商品\r\n     */\r\n    add: function (data) {\r\n        var tmp = this.tmp.cloneNode(true) //克隆一个元素节点\r\n        //1.创建购物车中的一件商品对象\r\n        var item = new Item(tmp, data)\r\n        var cart = this\r\n        //2.添加事件\r\n        item.check.onclick = function () {\r\n            cart.updateTotal()\r\n        }\r\n        item.add.onclick = function () {\r\n            //增加商品数量\r\n            item.num.textContent = ++item.data.num\r\n            if (item.data.num <= item.data.inventory) {\r\n                item.updateSubtotal()\r\n                cart.updateTotal()\r\n            } else {\r\n                window.alert('库存有限')\r\n                item.num.textContent = --item.data.num\r\n                return\r\n            }\r\n        }\r\n        item.reduce.onclick = function () {\r\n            //减少商品数量\r\n            if (item.data.num > 1) {\r\n                item.num.textContent = --item.data.num\r\n                item.updateSubtotal()\r\n                cart.updateTotal()\r\n            } else {\r\n                alert('至少选择1件，如果不需要，请直接删除')\r\n            }\r\n        }\r\n        item.del.onclick = function () {\r\n            if (confirm('您确定要删除此商品吗？')) {\r\n                //删除商品\r\n                tmp.parentNode.removeChild(tmp) //移出HTML页面中的商品\r\n                cart.del(item) //删除items中保存的对应商品\r\n                cart.updateTotal()\r\n            }\r\n        }\r\n        //3.更新小计，然后将商品对象保存到items中，并插入到item-bottom节点之前\r\n        item.updateSubtotal()\r\n        this.items.push(item)\r\n        this.bottom.before(tmp)\r\n    },\r\n\r\n    updateTotal: function () {\r\n        //更新购物车统计\r\n        var num = 0,\r\n            price = 0,\r\n            inventory = 10\r\n        for (var i in this.items) {\r\n            var item = this.items[i]\r\n            if (item.check.checked) {\r\n                num += item.data.num\r\n                price += item.data.num * item.data.price\r\n                inventory += item.data.inventory - item.data.num\r\n            }\r\n        }\r\n        this.num.textContent = num\r\n        this.price.textContent = price.toFixed(2)\r\n    },\r\n\r\n    checkAll: function () {\r\n        //\t全选功能\r\n        for (var i in this.items) {\r\n            this.items[i].check.checked = true\r\n        }\r\n        this.updateTotal()\r\n    },\r\n\r\n    del: function (item) {\r\n        //删除商品\r\n        for (var i in this.items) {\r\n            if (this.items[i] === item) {\r\n                delete this.items[i]\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\n//Item构造函数\r\nfunction Item(tmp, data) {\r\n    var find = new Find(tmp) //获取class为cart的div元素对象\r\n    this.check = find.className('check') //获取商品前的复选框对象\r\n    this.name = find.className('name') //获取商品名称对象\r\n    this.price = find.className('price') //获取商品单价对象\r\n    this.num = find.className('num') //获取商品数量对象\r\n    this.add = find.className('add') //获取增加商品数量\r\n    this.reduce = find.className('reduce') //获取减少商品对象\r\n    this.subtotal = find.className('subtotal') //获取商品小计对象\r\n    this.inventory = find.className('inventory')\r\n    this.del = find.className('del') //获取删除商品对象\r\n    this.data = data\r\n    //设置商品相关参数\r\n    this.inventory.textContent = data.inventory\r\n    this.name.textContent = data.name\r\n    this.price.textContent = data.price.toFixed(2)\r\n    this.num.textContent = data.num\r\n}\r\nItem.prototype = {\r\n    /**\r\n     * 更新小计\r\n     */\r\n    updateSubtotal: function () {\r\n        this.subtotal.textContent = (this.data.num * this.data.price).toFixed(2)\r\n        // this.inventory.textContent = (this.inventory - this.data.num);\r\n    },\r\n}\r\n\r\n//Find构造函数表示从哪个元素对象中进行查找\r\nfunction Find(obj) {\r\n    this.obj = obj\r\n}\r\n\r\nFind.prototype = {\r\n    prefix: '', //prefix属性表示class前缀\r\n    className: function (className) {\r\n        //className()方法用于根据class查找对应的元素\r\n        return this.obj.getElementsByClassName(this.prefix + '-' + className)[0]\r\n    },\r\n}\r\n\r\n//编写Cart构造函数，用来创建购物车\r\nfunction Cart(obj) {\r\n    this.items = [] //保存所有商品，用于完成购物车的统计、全选以及商品删除的操作\r\n    var find = new Find(obj) //获取class为cart的div对象\r\n    this.all = find.className('all') //获取全选元素对象\r\n    this.bottom = find.className('bottom') //获取购物车的统计部分元素对象\r\n    this.num = find.className('total-num') //获取商品总数\r\n    this.price = find.className('total-price') //商品总价\r\n    this.tmp = find.className('item') //获取商品的模板\r\n    this.tmp.parentNode.removeChild(this.tmp) //移出模板\r\n    var cart = this\r\n    this.all.onclick = function () {\r\n        //为全选添加单击事件\r\n        cart.checkAll()\r\n    }\r\n}\r\nShopCart('cart', [\r\n    { name: 'Head first HTML&CSS', price: 45.8, num: 1, inventory: 12 },\r\n    { name: 'CSS权威指南', price: 45.2, num: 1, inventory: 8 },\r\n    { name: 'JavaScript高级程序设计', price: 45.8, num: 1, inventory: 10 },\r\n    { name: 'HTTP权威指南', price: 49.8, num: 1, inventory: 7 },\r\n])\r\n"]}